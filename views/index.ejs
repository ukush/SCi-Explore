<!--The map will go here-->

<div id ="map"></div>
<div id="coordinates">

</div>
<script>
    //
    // retrieves JSON data from backend and stores within a script variable for better access
    //
    var data = <%-JSON.stringify(data)%>;
    var allcoords = []
    var json = []
    console.dir(data[0].length)
    for (var i=0;data[0].length;i++) {
        try {
            if (i == 118) {
                break;
            }
            if(data[0][i][1] != null){
                let coords = data[0][i][1].coordinates
                let jsonobject = data[0][i]
                json.push(jsonobject)
                allcoords.push(coords)
            }
        } catch (error) {
            console.dir(error)
        }
    }
</script>
<script>
var map = L.map('map').setView([53, -4], 6);

// defines the coordinate data

var addressPoints = allcoords

L.tileLayer('').addTo(map);
//
// defines map layers
//
var polygons = L.layerGroup();
var markers = L.markerClusterGroup();
// 
// geojson missions formatting options
//
const geojsonMarkerOptions = {
    radius: 8,
    fillColor: "#ff7800",
    color: "#000",
    weight: 1,
    opacity: 1,
    fillOpacity: 0.8,
  };
//
// -- Adds the mission layer containing all scenes
//
for(var i=0;i<json.length;i++){
    L.geoJSON(json[i], {
    onEachFeature: function(feature, layer) {
        if (json[i][2] != null){
        layer.bindPopup("<h1>"+json[i][2].name+
            "</h2><table><td><tr>ATOT:"+json[i][2].ATOT+
                "</tr><tr>\nmId:"+json[i][2].id+"</tr><tr>\nScenes:"+json[i][2].scenes[0]+"</tr></td></table>")
        //console.dir(feature)
        } else {
            layer.bindPopup("No metadata >:(")
        }
    },
    pointToLayer: function (feature, latlng) {
      return L.marker(feature.coordinates, geojsonMarkerOptions);
    }
  }).addTo(polygons);
}

var ctrl = L.control.layers([]);

// 
// clusters all the coordinates onto the map
//
for (var i = 0; i < allcoords.length; i++) {
    try {
        //console.dir(allcoords[i][0][0][0])
        for(var j=0; j< allcoords[i].length;j++){
            var array = []
            for(var k=0;k<allcoords[i][j].length;k++){
                var marker = L.marker(new L.LatLng(allcoords[i][j][k][0][1], allcoords[i][j][k][0][0]))
            }
            markers.addLayer(marker)
        }
        } catch(error) {
            console.dir(error)
        }
    }
//
// map key toggle overlays
//
ctrl.addOverlay(markers, 'Coverage');
ctrl.addOverlay(polygons, 'Missions');
ctrl.addTo(map);

// add map scale
L.control.scale({ position: 'bottomleft' }).addTo(map)


// add coordinate mouse position
map.on('mousemove', function(e) {
    var latlong = `+${e.latlng.lat.toFixed(10)} ${e.latlng.lng.toFixed(10)}`
    $('#coordinates').html(latlong)
});

// add sci logo onto map as overlay
L.Control.Watermark = L.Control.extend({
    onAdd: function(map) {
        var img = L.DomUtil.create('img')
        img.src = 'images/sci-logo.png'
        img.style.width = '60px'
        return img
    },
    onRemove: function(map) {}
});
//
// - watermark addition to map
//
L.control.watermark = function(openstreetmap) {
    return new L.Control.Watermark(openstreetmap)
}

L.control.watermark({ position: 'bottomright' }).addTo(map)
L.tileLayer('https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png', {
    attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors &copy; <a href="https://carto.com/attributions">CARTO</a>',
    subdomains: 'abcd',
    maxZoom: 20
}).addTo(map)
</script>
<script src="../api.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>